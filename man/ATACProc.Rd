% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BaseProc.R
\docType{class}
\name{ATACProc}
\alias{ATACProc}
\alias{atacPrintMap}
\alias{clearCache}
\alias{getNextProcList}
\alias{getParam}
\alias{getParamItems}
\alias{getProcName}
\alias{getReportItems}
\alias{getReportVal}
\alias{isReady}
\alias{isSingleEnd}
\alias{printMap}
\alias{process}
\title{Methods for ATACProc objects}
\usage{
atacPrintMap(atacProc, preProc = FALSE, nextProc = TRUE, curProc = TRUE,
  display = TRUE)

printMap(atacProc = NULL, preProc = FALSE, nextProc = TRUE,
  curProc = TRUE, display = TRUE)

process(.Object, ...)

getNextProcList(procName)

getProcName(.Object, ...)

getParam(.Object, item, ...)

getParamItems(.Object, ...)

isReady(.Object, ...)

clearCache(.Object, ...)

isSingleEnd(.Object, ...)

getReportVal(.Object, item, ...)

getReportItems(.Object, ...)
}
\arguments{
\item{atacProc}{ATACProc object return by functions or Character scalar.}

\item{preProc}{\code{Logitcal} scalar. 
show the available upstream processes if TRUE}

\item{nextProc}{\code{Logitcal} scalar.
show the available downstream processes if TRUE}

\item{curProc}{\code{Logitcal} scalar.
show the current process of parameter \code{atacProc} if TRUE}

\item{display}{\code{Logitcal} scalar.
Save to pdf file if FALSE.}

\item{item}{\code{Characters} scalar
The parameters name}
}
\value{
The value return by object methods.

the function and result of functions

\item{process}{Call this function to redo processing }

\item{getNextProcList}{Get list of available downstream process}

\item{getProcName}{get atacProc Characher name}

\item{getParam}{Get parameter value setted by process function}

\item{getParamItems}{Get parameter name list}

\item{isReady}{Is the process ready}

\item{clearCache}{Clear cache of atacProc object}

\item{isSingleEnd}{Single end data if TRUE else FALSE}

\item{getReportVal}{Get report value of item}

\item{getReportItems}{Get all items that can be reported}
}
\description{
You can call ATACProc objects operation methods below to 
obtain information in objects. Or, you call also call
"atacProc$method(parameters)" to do the same things.
}
\details{
ATACProc is a R6ClassGenerator for generating ATACProc R6 objects. 
All ATACProc objects generated by its subclasses R6ClassGenerator.
You can only use the ATACProc objects returned by any functions 
rather than use ATACProc R6ClassGenerator to generate yourself.
}
\author{
Zheng Wei
}
\seealso{
\code{\link{atacSamToBed}} 
\code{\link{atacBedUtils}}
}

