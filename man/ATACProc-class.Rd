% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BaseProc.R
\docType{class}
\name{ATACProc-class}
\alias{ATACProc-class}
\alias{atacPrintMap,ATACProc-method}
\alias{atacPrintMap}
\alias{printMap}
\alias{process,ATACProc-method}
\alias{process}
\alias{getProcName,ATACProc-method}
\alias{getProcName}
\alias{getParam,ATACProc-method}
\alias{getParam}
\alias{getParamItems,ATACProc-method}
\alias{getParamItems}
\alias{isReady,ATACProc-method}
\alias{isReady}
\alias{clearProcCache,ATACProc-method}
\alias{clearProcCache}
\alias{isSingleEnd,ATACProc-method}
\alias{isSingleEnd}
\alias{getReportVal,ATACProc-method}
\alias{getReportVal}
\alias{getReportItems,ATACProc-method}
\alias{getReportItems}
\title{Methods for ATACProc objects}
\usage{
\S4method{atacPrintMap}{ATACProc}(atacProc, preProc = FALSE,
  nextProc = TRUE, curProc = TRUE, display = TRUE)

printMap(atacProc = NULL, preProc = FALSE, nextProc = TRUE,
  curProc = TRUE, display = TRUE)

\S4method{process}{ATACProc}(.Object, ...)

\S4method{getProcName}{ATACProc}(.Object, ...)

\S4method{getParam}{ATACProc}(.Object, item, ...)

\S4method{getParamItems}{ATACProc}(.Object, ...)

\S4method{isReady}{ATACProc}(.Object, ...)

\S4method{clearProcCache}{ATACProc}(.Object, ...)

\S4method{isSingleEnd}{ATACProc}(.Object, ...)

\S4method{getReportVal}{ATACProc}(.Object, item, ...)

\S4method{getReportItems}{ATACProc}(.Object, ...)
}
\arguments{
\item{atacProc}{Character scalar. The ATACProc subclass name 
for \code{printMap}.(Default: NULL). For \code{atacPrintMap}, see \code{.Object}}

\item{preProc}{\code{Logitcal} scalar.
show the available upstream processes if TRUE.(Default: FALSE)}

\item{nextProc}{\code{Logitcal} scalar.
show the available downstream processes if TRUE. (Default: TRUE)}

\item{curProc}{\code{Logitcal} scalar.
show the current process of parameter \code{.Object} if TRUE. (Default: TRUE)}

\item{display}{\code{Logitcal} scalar.
Save to pdf file if FALSE. (Default: TRUE)}

\item{.Object}{ATACProc object scalar. 
ATACProc object return by process functions.}

\item{...}{Additional arguments, currently unused.}

\item{item}{\code{Characters} scalar. 
The items in parameter list or report list.}
}
\value{
the function and result of functions:

\item{atacPrintMap}{Print map to locate the atacProc object in charflow}

\item{printMap}{Print map to locate the atacProc name in charflow}

\item{process}{Call this function to redo processing }

\item{getProcName}{get ATACProc object Characher name}

\item{getParam}{Get parameter value set by process function. 
See \code{getParamItems} to obtain valid item for query.}

\item{getParamItems}{Get parameter name list}

\item{isReady}{Is the process ready for downstream process}

\item{clearProcCache}{Clear cache of atacProc object}

\item{isSingleEnd}{Single end data if TRUE else FALSE}

\item{getReportVal}{Get report value of item. 
See \code{getReportItems} to obtain valid item for query.}

\item{getReportItems}{Get all items that can be reported}
}
\description{
You can call ATACProc objects operation methods below to
obtain information in objects.
}
\details{
ATACProc is a S4 class for generating ATACProc S4 objects.
All ATACProc objects generated by its subclasses.
You can only use the ATACProc objects returned by any functions
rather than use ATACProc S4 class to generate object yourself.
}
\examples{

\dontrun{
library(magrittr)
td <- tempdir()
options(atacConf=setConfigure("tmpdir",td))

# Identify adapters
prefix<-system.file(package="esATAC", "extdata", "uzmg")
(reads_1 <-file.path(prefix,"m1",dir(file.path(prefix,"m1"))))
(reads_2 <-file.path(prefix,"m2",dir(file.path(prefix,"m2"))))

reads_merged_1 <- file.path(td,"reads1.fastq")
reads_merged_2 <- file.path(td,"reads2.fastq")
atacproc <-
atacUnzipAndMerge(fastqInput1 = reads_1,fastqInput2 = reads_2) \%>\%
atacRenamer \%>\% atacRemoveAdapter

subclassname<-getProcName(atacproc)

printMap(subclassname)

(pitems<-getParamItems(atacproc))
getParam(atacproc,pitems[1])


isReady(atacproc)
isSingleEnd(atacproc)
(ritems<-getReportItems(atacproc))
getReportVal(atacproc,ritems[1])

clearProcCache(atacproc)

process(atacproc)
}
}
\seealso{
\code{\link{atacPipe}}
\code{\link{atacRemoveAdapter}}
}
\author{
Zheng Wei
}
