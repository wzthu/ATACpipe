% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BaseProc.R
\docType{class}
\name{ATACProc-class}
\alias{ATACProc-class}
\alias{atacPrintMap}
\alias{atacPrintMap,ATACProc-method}
\alias{clearProcCache}
\alias{clearProcCache,ATACProc-method}
\alias{getParam}
\alias{getParam,ATACProc-method}
\alias{getParamItems}
\alias{getParamItems,ATACProc-method}
\alias{getProcName}
\alias{getProcName,ATACProc-method}
\alias{getReportItems}
\alias{getReportItems,ATACProc-method}
\alias{getReportVal}
\alias{getReportVal,ATACProc-method}
\alias{isReady}
\alias{isReady,ATACProc-method}
\alias{isSingleEnd}
\alias{isSingleEnd,ATACProc-method}
\alias{printMap}
\alias{process}
\alias{process,ATACProc-method}
\title{Methods for ATACProc objects}
\usage{
\S4method{atacPrintMap}{ATACProc}(atacProc, preProc = FALSE,
  nextProc = TRUE, curProc = TRUE, display = TRUE)

printMap(atacProc = NULL, preProc = FALSE, nextProc = TRUE,
  curProc = TRUE, display = TRUE)

\S4method{process}{ATACProc}(.Object, ...)

\S4method{getProcName}{ATACProc}(.Object, ...)

\S4method{getParam}{ATACProc}(.Object, item, ...)

\S4method{getParamItems}{ATACProc}(.Object, ...)

\S4method{isReady}{ATACProc}(.Object, ...)

\S4method{clearProcCache}{ATACProc}(.Object, ...)

\S4method{isSingleEnd}{ATACProc}(.Object, ...)

\S4method{getReportVal}{ATACProc}(.Object, item, ...)

\S4method{getReportItems}{ATACProc}(.Object, ...)
}
\arguments{
\item{preProc}{\code{Logitcal} scalar.
show the available upstream processes if TRUE}

\item{nextProc}{\code{Logitcal} scalar.
show the available downstream processes if TRUE}

\item{curProc}{\code{Logitcal} scalar.
show the current process of parameter \code{.Object} if TRUE}

\item{display}{\code{Logitcal} scalar.
Save to pdf file if FALSE.}

\item{.Object, atacProc}{ATACProc object return by functions or Character scalar.}

\item{...}{ignored
The parameters name}

\item{item}{\code{Characters} scalar}
}
\value{
The value return by object methods.

the function and result of functions

\item{process}{Call this function to redo processing }

\item{getProcName}{get atacProc Characher name}

\item{getParam}{Get parameter value setted by process function}

\item{getParamItems}{Get parameter name list}

\item{isReady}{Is the process ready}

\item{clearProcCache}{Clear cache of atacProc object}

\item{isSingleEnd}{Single end data if TRUE else FALSE}

\item{getReportVal}{Get report value of item}

\item{getReportItems}{Get all items that can be reported}
}
\description{
You can call ATACProc objects operation methods below to
obtain information in objects.
}
\details{
ATACProc is a S4 class for generating ATACProc S4 objects.
All ATACProc objects generated by its subclasses.
You can only use the ATACProc objects returned by any functions
rather than use ATACProc S4 class to generate object yourself.
}
\examples{
library(magrittr)
td <- tempdir()
options(atacConf=setConfigure("tmpdir",td))

# Identify adapters
prefix<-system.file(package="ATACpipe", "extdata", "uzmg")
(reads_1 <-file.path(prefix,"m1",dir(file.path(prefix,"m1"))))
(reads_2 <-file.path(prefix,"m2",dir(file.path(prefix,"m2"))))

reads_merged_1 <- file.path(td,"reads1.fastq")
reads_merged_2 <- file.path(td,"reads2.fastq")
atacproc <-
atacUnzipAndMerge(fastqInput1 = reads_1,fastqInput2 = reads_2) \%>\%
atacRenamer \%>\% atacRemoveAdapter

subclassname<-getProcName(atacproc)

printMap(subclassname)

(pitems<-getParamItems(atacproc))
getParam(atacproc,pitems[1])


isReady(atacproc)
isSingleEnd(atacproc)
(ritems<-getReportItems(atacproc))
getReportVal(atacproc,ritems[1])

clearProcCache(atacproc)

process(atacproc)

}
\author{
Zheng Wei
}
\seealso{
\code{\link{atacSamToBed}}
\code{\link{atacBedUtils}}
}

